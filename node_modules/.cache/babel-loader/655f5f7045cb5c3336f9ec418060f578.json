{"ast":null,"code":"import _slicedToArray from \"/home/rajesh/hooks-simple/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajesh/hooks-simple/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({\n  resource\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        resources = _useState2[0],\n        setResources = _useState2[1];\n\n  useEffect(() => {\n    (async resource => {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n      setResources(response.data);\n    })(resource);\n  }, [resource]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, resources.map(record));\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/home/rajesh/hooks-simple/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resource","resources","setResources","response","get","data","map","record"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACHJ,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QAC9BK,SAD8B;AAAA,QACnBC,YADmB;;AAKrCL,EAAAA,SAAS,CAEP,MAAM;AAEJ,KAAC,MAAMG,QAAN,IAAkB;AAEjB,YAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,wCAAuCJ,QAAS,EAA3D,CAAvB;AAGAE,MAAAA,YAAY,CAACC,QAAQ,CAACE,IAAV,CAAZ;AAED,KAPD,EAOGL,QAPH;AASD,GAbM,EAaJ,CAACA,QAAD,CAbI,CAAT;AAiBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,SAAS,CAACK,GAAV,CAAeC,MAAf,CAAN,CAAP;AAED,CAxBD;;AA0BA,eAAeR,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({ resource }) => {\n  const [resources, setResources] = useState([]);\n\n\n\n  useEffect(\n\n    () => {\n\n      (async resource => {\n\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`\n        );\n\n        setResources(response.data);\n\n      })(resource)\n\n    }, [resource]\n  );\n\n\n  return <div>{resources.map((record))}</div>;\n\n}\n\nexport default ResourceList;"]},"metadata":{},"sourceType":"module"}